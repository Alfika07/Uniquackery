
  [ this ] is extensions.qky

  [ $ 'bigrat.qky' loadfile ] now!

  [ stack ] is msort.test

  [ ]'[ msort.test put
    [ dup size 16 < iff
        [ sortwith
          [ msort.test share do ] ]
        done
      dup size 2 / split
      swap recurse
      swap recurse
      [] temp put
      [ dup  [] != while
        over [] != while
        over 0 peek
        over 0 peek
        msort.test share do
        not if dip
          [ 1 split
            temp take
            rot join
            temp put ]
        again ]
      join
      temp take swap join ]
    msort.test release ]        is sortwith    (       [ --> [       )

  [ sortwith > ]                is sort        (       [ --> [       )

  [ sortwith $> ]               is sort$       (       [ --> [       )
